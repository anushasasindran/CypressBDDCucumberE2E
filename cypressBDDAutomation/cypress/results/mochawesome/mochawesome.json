{
  "stats": {
    "suites": 6,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-08T09:43:00.597Z",
    "end": "2023-11-08T09:43:16.159Z",
    "duration": 15562,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4cba10a1-6600-4ca2-ab77-09faa0584130",
      "title": "",
      "fullFile": "cypress\\e2e\\order-api-features.js",
      "file": "cypress\\e2e\\order-api-features.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "680d433f-33c7-4a5a-bbe6-0aed5d151292",
          "title": "Register API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Register a user with various data inputs (example #1)",
              "fullTitle": "Register API Register a user with various data inputs (example #1)",
              "timedOut": null,
              "duration": 1387,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4f7b22f9-c26c-425d-8b6d-322c4a9e22b6",
              "parentUUID": "680d433f-33c7-4a5a-bbe6-0aed5d151292",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Register a user with various data inputs (example #2)",
              "fullTitle": "Register API Register a user with various data inputs (example #2)",
              "timedOut": null,
              "duration": 524,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "481a44dd-d02f-4882-aed5-9dabeedb4fb9",
              "parentUUID": "680d433f-33c7-4a5a-bbe6-0aed5d151292",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Register a user with various data inputs (example #3)",
              "fullTitle": "Register API Register a user with various data inputs (example #3)",
              "timedOut": null,
              "duration": 808,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5057c9fb-dc7d-45d4-bcca-982361818887",
              "parentUUID": "680d433f-33c7-4a5a-bbe6-0aed5d151292",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f7b22f9-c26c-425d-8b6d-322c4a9e22b6",
            "481a44dd-d02f-4882-aed5-9dabeedb4fb9",
            "5057c9fb-dc7d-45d4-bcca-982361818887"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2719,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "046cc6a5-75d3-445a-a8d6-05c025a3c956",
          "title": "Authenticate API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Authenticate registered user",
              "fullTitle": "Authenticate API Authenticate registered user",
              "timedOut": null,
              "duration": 816,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d6ad0dfa-1890-45ee-abce-21aab3ddde94",
              "parentUUID": "046cc6a5-75d3-445a-a8d6-05c025a3c956",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Authenticate non-registered user (example #1)",
              "fullTitle": "Authenticate API Authenticate non-registered user (example #1)",
              "timedOut": null,
              "duration": 484,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "00975cd2-728c-4cbe-a403-f12acb6d13fa",
              "parentUUID": "046cc6a5-75d3-445a-a8d6-05c025a3c956",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Authenticate non-registered user (example #2)",
              "fullTitle": "Authenticate API Authenticate non-registered user (example #2)",
              "timedOut": null,
              "duration": 563,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bceac0a8-9297-4092-ba0a-ed372ecbe448",
              "parentUUID": "046cc6a5-75d3-445a-a8d6-05c025a3c956",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6ad0dfa-1890-45ee-abce-21aab3ddde94",
            "00975cd2-728c-4cbe-a403-f12acb6d13fa",
            "bceac0a8-9297-4092-ba0a-ed372ecbe448"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1863,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "29f581fb-23f0-4caa-8534-2a93a72f99b7",
          "title": "Add Note in UI",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add a note with different categories (example #1)",
              "fullTitle": "Add Note in UI Add a note with different categories (example #1)",
              "timedOut": null,
              "duration": 761,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a64ea9c5-98eb-41a6-9cac-d7e816f99c1e",
              "parentUUID": "29f581fb-23f0-4caa-8534-2a93a72f99b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a note with different categories (example #2)",
              "fullTitle": "Add Note in UI Add a note with different categories (example #2)",
              "timedOut": null,
              "duration": 687,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "340d6453-cf1a-4acd-b4ca-902b1d00b056",
              "parentUUID": "29f581fb-23f0-4caa-8534-2a93a72f99b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a note with different categories (example #3)",
              "fullTitle": "Add Note in UI Add a note with different categories (example #3)",
              "timedOut": null,
              "duration": 808,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c46ad2c8-5cad-46b8-93b1-93820e037c8e",
              "parentUUID": "29f581fb-23f0-4caa-8534-2a93a72f99b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempt to add a note with invalid categories (example #1)",
              "fullTitle": "Add Note in UI Attempt to add a note with invalid categories (example #1)",
              "timedOut": null,
              "duration": 518,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dc84c542-9e9a-4324-9b8d-faf03bb668d7",
              "parentUUID": "29f581fb-23f0-4caa-8534-2a93a72f99b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempt to add a note with invalid categories (example #2)",
              "fullTitle": "Add Note in UI Attempt to add a note with invalid categories (example #2)",
              "timedOut": null,
              "duration": 443,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4edb9b54-fcfb-41bd-a9a4-a1395c16c034",
              "parentUUID": "29f581fb-23f0-4caa-8534-2a93a72f99b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a64ea9c5-98eb-41a6-9cac-d7e816f99c1e",
            "340d6453-cf1a-4acd-b4ca-902b1d00b056",
            "c46ad2c8-5cad-46b8-93b1-93820e037c8e",
            "dc84c542-9e9a-4324-9b8d-faf03bb668d7",
            "4edb9b54-fcfb-41bd-a9a4-a1395c16c034"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3217,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "24c6f6ce-3f09-477e-82e2-ef46c3304c54",
          "title": "Retrieve Note API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Retrieve all notes by their IDs",
              "fullTitle": "Retrieve Note API Retrieve all notes by their IDs",
              "timedOut": null,
              "duration": 638,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8ea11560-9fc6-4dd8-bc5c-204da86374bf",
              "parentUUID": "24c6f6ce-3f09-477e-82e2-ef46c3304c54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempt to retrieve a note with invalid ID (example #1)",
              "fullTitle": "Retrieve Note API Attempt to retrieve a note with invalid ID (example #1)",
              "timedOut": null,
              "duration": 437,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d0ffa072-eb8c-4ba5-8ecd-412ada6f3c3c",
              "parentUUID": "24c6f6ce-3f09-477e-82e2-ef46c3304c54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempt to retrieve a note with invalid ID (example #2)",
              "fullTitle": "Retrieve Note API Attempt to retrieve a note with invalid ID (example #2)",
              "timedOut": null,
              "duration": 485,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "da58fa15-db31-4d0c-80f5-3446890b9673",
              "parentUUID": "24c6f6ce-3f09-477e-82e2-ef46c3304c54",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ea11560-9fc6-4dd8-bc5c-204da86374bf",
            "d0ffa072-eb8c-4ba5-8ecd-412ada6f3c3c",
            "da58fa15-db31-4d0c-80f5-3446890b9673"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1560,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d32698ae-16a2-459f-b620-e1129890406e",
          "title": "Edit Note API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Edit a Note with valid noteID",
              "fullTitle": "Edit Note API Edit a Note with valid noteID",
              "timedOut": null,
              "duration": 575,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e5d764d0-d6e5-45ca-9afa-12d1208b8242",
              "parentUUID": "d32698ae-16a2-459f-b620-e1129890406e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempt to edit a note with invalid ID (example #1)",
              "fullTitle": "Edit Note API Attempt to edit a note with invalid ID (example #1)",
              "timedOut": null,
              "duration": 408,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "44c905fc-b434-4a1a-af9e-011b36a8707e",
              "parentUUID": "d32698ae-16a2-459f-b620-e1129890406e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempt to edit a note with invalid ID (example #2)",
              "fullTitle": "Edit Note API Attempt to edit a note with invalid ID (example #2)",
              "timedOut": null,
              "duration": 460,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5bb889d3-16a5-4d65-9fd7-7faf82e503a0",
              "parentUUID": "d32698ae-16a2-459f-b620-e1129890406e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5d764d0-d6e5-45ca-9afa-12d1208b8242",
            "44c905fc-b434-4a1a-af9e-011b36a8707e",
            "5bb889d3-16a5-4d65-9fd7-7faf82e503a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1443,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "05cfe4de-7d94-46c7-97e4-4c68b8ed4182",
          "title": "Delete Note API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete a Note with valid noteID",
              "fullTitle": "Delete Note API Delete a Note with valid noteID",
              "timedOut": null,
              "duration": 550,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e3d7875d-04bc-4134-93d7-4c859665bbab",
              "parentUUID": "05cfe4de-7d94-46c7-97e4-4c68b8ed4182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempt to delete a note with invalid ID (example #1)",
              "fullTitle": "Delete Note API Attempt to delete a note with invalid ID (example #1)",
              "timedOut": null,
              "duration": 2299,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "edb934fc-2138-483b-93e9-9d76705625fd",
              "parentUUID": "05cfe4de-7d94-46c7-97e4-4c68b8ed4182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Attempt to delete a note with invalid ID (example #2)",
              "fullTitle": "Delete Note API Attempt to delete a note with invalid ID (example #2)",
              "timedOut": null,
              "duration": 563,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "88524e2e-7746-4b6e-93ea-32fcb4373b75",
              "parentUUID": "05cfe4de-7d94-46c7-97e4-4c68b8ed4182",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3d7875d-04bc-4134-93d7-4c859665bbab",
            "edb934fc-2138-483b-93e9-9d76705625fd",
            "88524e2e-7746-4b6e-93ea-32fcb4373b75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3412,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}